SEGGER J-Link GDB Server V6.86f LogFile
Logging started @ 2021-01-18 01:16
03-00000000-00-00000000-004A: Command line: -JLinkScriptFile ./bbb_pll_init.JLinkScript -log output.txt

03-00000000-00-00000000-01A9: -----GDB Server start settings-----
GDBInit file:                  none
GDB Server Listening port:     2331
SWO raw output listening port: 2332
Terminal I/O port:             2333
Accept remote connection:      yes
Generate logfile:              on
Verify download:               off
Init regs on start:            off
Silent mode:                   off
Single run mode:               off
Target connection timeout:     0 ms

03-00000000-00-00000000-0165: ------J-Link related settings------
J-Link Host interface:         USB
J-Link script:                 ./bbb_pll_init.JLinkScript
J-Link settings file:          none
------Target related settings------
Target device:                 Unspecified
Target interface:              JTAG
Target interface speed:        4000kHz
Target endian:                 little

03-00000000-00-00000000-0001: 

03-00000000-00-00000000-0018: Connecting to J-Link...

03-00000000-00-00000151-0015: J-Link is connected.

03-00000000-00-00010262-0036: Firmware: J-Link ARM V8 compiled Nov 28 2014 13:44:46

03-00000000-00-00010262-0010: Hardware: V8.00

03-00000000-00-00010262-002B: Feature(s): RDI,FlashDL,FlashBP,JFlash,GDB

03-00000000-00-00010263-001B: Checking target voltage...

03-00000000-00-00010263-0017: Target voltage: 3.30 V

03-00000000-00-00010263-001E: Listening on TCP/IP port 2331

03-00000000-00-00010263-0018: Connecting to target...

03-00000000-00-00010564-002F: 
J-Link found 2 JTAG devices, Total IRLen = 10

03-00000000-00-00010564-0020: JTAG ID: 0x3BA00477 (Cortex-A8)

03-00000000-00-00010575-0014: Connected to target

03-00000000-00-00010575-001D: Waiting for GDB connection...
03-00000000-00-00028380-0017: Connected to 127.0.0.1

00-0000000C-00-00028380-00A0: +$qSupported:multiprocess+;swbreak+;hwbreak+;qRelocInsn+;fork-events+;vfork-events+;exec-events+;vContSupported+;QThreadEvents+;no-resumed+;xmlRegisters=i386#6a
01-0000000C-00-00028380-0001: +
01-0000000C-00-00028380-0059: $PacketSize=4000;qXfer:memory-map:read-;QStartNoAckMode+;hwbreak+;qXfer:features:read+#b1
00-0000000C-00-00028380-0001: +
00-0000000C-00-00028380-0013: $vMustReplyEmpty#3a
01-0000000C-00-00028380-0001: +
01-0000000C-00-00028380-0004: $#00
00-0000000C-00-00028380-0001: +
00-0000000C-00-00028380-0013: $QStartNoAckMode#b0
01-0000000C-00-00028380-0001: +
01-0000000C-00-00028380-0006: $OK#9a
00-0000000C-00-00028380-0001: +
00-0000000C-00-00028380-0005: $!#21
01-0000000C-00-00028380-0006: $OK#9a
00-0000000C-00-00028380-0007: $Hg0#df
01-0000000C-00-00028380-0006: $OK#9a
00-0000000C-00-00028380-0029: $qXfer:features:read:target.xml:0,1000#0c
01-0000000C-00-00028380-0FF4: $m<?xml version="1.0"?>
<!-- Copyright (C) 2008 Free Software Foundation, Inc. -->
<!-- Copying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved.  -->
<!-- SEGGER: Add new registers only after the "SEGGER START" section in the xml file, to make sure we never get incompatible to the GDB register stream -->
<!DOCTYPE feature SYSTEM "gdb-target.dtd">
<target>
  <architecture>arm</architecture>
  <feature name="org.gnu.gdb.arm.core">
    <reg name="r0" bitsize="32" type="uint32" group="general"/>
    <reg name="r1" bitsize="32" type="uint32" group="general"/>
    <reg name="r2" bitsize="32" type="uint32" group="general"/>
    <reg name="r3" bitsize="32" type="uint32" group="general"/>
    <reg name="r4" bitsize="32" type="uint32" group="general"/>
    <reg name="r5" bitsize="32" type="uint32" group="general"/>
    <reg name="r6" bitsize="32" type="uint32" group="general"/>
    <reg name="r7" bitsize="32" type="uint32" group="general"/>
    <reg name="r8" bitsize="32" type="uint32" group="general"/>
    <reg name="r9" bitsize="32" type="uint32" group="general"/>
    <reg name="r10" bitsize="32" type="uint32" group="general"/>
    <reg name="r11" bitsize="32" type="uint32" group="general"/>
    <reg name="r12" bitsize="32" type="uint32" group="general"/>
    <reg name="sp" bitsize="32" type="data_ptr" group="general"/>
    <reg name="lr" bitsize="32" type="uint32" group="general"/>
    <reg name="pc" bitsize="32" type="code_ptr" group="general"/>
    <reg name="cpsr" bitsize="32" type="uint32" group="general"/>
  </feature>
  <feature name="org.gnu.gdb.arm.vfp">
    <reg name="fpscr" bitsize="32" type="uint32" group="float"/>
    <reg name="d0" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d1" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d2" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d3" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d4" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d5" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d6" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d7" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d8" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d9" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d10" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d11" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d12" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d13" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d14" bitsize="64" type="ieee_double" group="float"/>
    <reg name="d15" bitsize="64" type="ieee_double" group="float"/>
  </feature>
  <feature name="segger.core.mode">
    <reg name="r8_usr" bitsize="32" type="uint32" group="mode"/>
    <reg name="r9_usr" bitsize="32" type="uint32" group="mode"/>
    <reg name="r10_usr" bitsize="32" type="uint32" group="mode"/>
    <reg name="r11_usr" bitsize="32" type="uint32" group="mode"/>
    <reg name="r12_usr" bitsize="32" type="uint32" group="mode"/>
    <reg name="r13_usr" bitsize="32" type="uint32" group="mode"/>
    <reg name="r14_usr" bitsize="32" type="uint32" group="mode"/>
    <reg name="r8_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r9_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r10_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r11_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r12_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r13_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r14_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="spsr_fiq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r13_irq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r14_irq" bitsize="32" type="uint32" group="mode"/>
    <reg#1d
00-0000000C-00-00028381-002B: $qXfer:features:read:target.xml:fef,1000#0d
01-0000000C-00-00028381-02CF: $l name="spsr_irq" bitsize="32" type="uint32" group="mode"/>
    <reg name="r13_svc" bitsize="32" type="uint32" group="mode"/>
    <reg name="r14_svc" bitsize="32" type="uint32" group="mode"/>
    <reg name="spsr_svc" bitsize="32" type="uint32" group="mode"/>
    <reg name="r13_abt" bitsize="32" type="uint32" group="mode"/>
    <reg name="r14_abt" bitsize="32" type="uint32" group="mode"/>
    <reg name="spsr_abt" bitsize="32" type="uint32" group="mode"/>
    <reg name="r13_und" bitsize="32" type="uint32" group="mode"/>
    <reg name="r14_und" bitsize="32" type="uint32" group="mode"/>
    <reg name="spsr_und" bitsize="32" type="uint32" group="mode"/>
  </feature>
<!-- SEGGER START -->
</target>
#8b
00-0000000C-00-00028381-000C: $qTStatus#49
01-0000000C-00-00028381-0004: $#00
00-0000000C-00-00028381-0005: $?#3f
01-0000000C-00-00028381-0007: $S05#b8
00-0000000C-00-00028381-0010: $qfThreadInfo#bb
01-0000000C-00-00028381-000D: $m0000dead#bb
00-0000000C-00-00028381-0010: $qsThreadInfo#c8
01-0000000C-00-00028381-0005: $l#6c
00-0000000C-00-00028381-000D: $qAttached#8f
01-0000000C-00-00028381-0004: $#00
00-0000000C-00-00028381-0008: $Hc-1#09
01-0000000C-00-00028381-0006: $OK#9a
00-0000000C-00-00028381-0006: $qC#b4
01-0000000C-00-00028381-0004: $#00
00-0000000C-00-00028381-0005: $g#67
03-00000000-00-00028381-0016: Reading all registers

01-0000000C-00-00028426-026C: $d8cf3040600000003a76000099190000000000000090e0440504000000000060949302000000000004000000000004480000044844cd304078dd3040be330200b30100800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009493020000000000040000000000044800000448000000000000000020d86a4017004145029c0817021150033286d1a200000000000000000000000000102941130d00010000000044cd304078dd3040000000000000000000000000000000008000604c8050892500000000#0f
00-0000000C-00-00028426-0010: $qfThreadInfo#bb
01-0000000C-00-00028426-000D: $m0000dead#bb
00-0000000C-00-00028426-0010: $qsThreadInfo#c8
01-0000000C-00-00028426-0005: $l#6c
00-0000000C-00-00028426-000C: $m233be,4#2c
03-00000000-00-00028428-0036: Read 4 bytes @ address 0x000233BE (Data = 0xD506060F)

01-0000000C-00-00028428-000C: $0f0606d5#fb
00-0000000C-00-00028428-000C: $m233ba,4#28
03-00000000-00-00028430-0036: Read 4 bytes @ address 0x000233BA (Data = 0x69695024)

01-0000000C-00-00028430-000C: $24506969#a9
00-0000000C-00-00028430-000C: $m233be,4#2c
03-00000000-00-00028432-0036: Read 4 bytes @ address 0x000233BE (Data = 0xD506060F)

01-0000000C-00-00028432-000C: $0f0606d5#fb
00-0000000C-00-00028432-000C: $m233ba,4#28
03-00000000-00-00028434-0036: Read 4 bytes @ address 0x000233BA (Data = 0x69695024)

01-0000000C-00-00028434-000C: $24506969#a9
00-0000000C-00-00028434-000C: $m233be,2#2a
03-00000000-00-00028435-0032: Read 2 bytes @ address 0x000233BE (Data = 0x060F)

01-0000000C-00-00028435-0008: $0f06#fc
00-0000000C-00-00028435-000C: $m233bc,2#28
03-00000000-00-00028436-0032: Read 2 bytes @ address 0x000233BC (Data = 0x6969)

01-0000000C-00-00028437-0008: $6969#de
00-0000000C-00-00028437-000C: $m233ba,2#26
03-00000000-00-00028438-0032: Read 2 bytes @ address 0x000233BA (Data = 0x5024)

01-0000000C-00-00028438-0008: $2450#cb
00-0000000C-00-00028438-000C: $m233be,2#2a
03-00000000-00-00028439-0032: Read 2 bytes @ address 0x000233BE (Data = 0x060F)

01-0000000C-00-00028439-0008: $0f06#fc
00-0000000C-00-00028439-000C: $m233bc,2#28
03-00000000-00-00028440-0032: Read 2 bytes @ address 0x000233BC (Data = 0x6969)

01-0000000C-00-00028440-0008: $6969#de
00-0000000C-00-00028440-000C: $m233ba,2#26
03-00000000-00-00028441-0032: Read 2 bytes @ address 0x000233BA (Data = 0x5024)

01-0000000C-00-00028441-0008: $2450#cb
00-0000000C-00-00028441-000C: $m233be,4#2c
03-00000000-00-00028443-0036: Read 4 bytes @ address 0x000233BE (Data = 0xD506060F)

01-0000000C-00-00028443-000C: $0f0606d5#fb
00-0000000C-00-00028443-000C: $m233ba,4#28
03-00000000-00-00028445-0036: Read 4 bytes @ address 0x000233BA (Data = 0x69695024)

01-0000000C-00-00028445-000C: $24506969#a9
00-0000000C-00-00028445-000C: $m233be,4#2c
03-00000000-00-00028447-0036: Read 4 bytes @ address 0x000233BE (Data = 0xD506060F)

01-0000000C-00-00028447-000C: $0f0606d5#fb
00-0000000C-00-00028447-000C: $m233ba,4#28
03-00000000-00-00028449-0036: Read 4 bytes @ address 0x000233BA (Data = 0x69695024)

01-0000000C-00-00028449-000C: $24506969#a9
00-0000000C-00-00028449-000C: $m233be,4#2c
03-00000000-00-00028451-0036: Read 4 bytes @ address 0x000233BE (Data = 0xD506060F)

01-0000000C-00-00028451-000C: $0f0606d5#fb
00-0000000C-00-00028451-000C: $m233be,4#2c
03-00000000-00-00028453-0036: Read 4 bytes @ address 0x000233BE (Data = 0xD506060F)

01-0000000C-00-00028453-000C: $0f0606d5#fb
00-0000000C-00-00028453-000C: $m233be,4#2c
03-00000000-00-00028455-0036: Read 4 bytes @ address 0x000233BE (Data = 0xD506060F)

01-0000000C-00-00028455-000C: $0f0606d5#fb
00-0000000C-00-00028455-000C: $m233be,2#2a
03-00000000-00-00028456-0032: Read 2 bytes @ address 0x000233BE (Data = 0x060F)

01-0000000C-00-00028456-0008: $0f06#fc
00-0000000C-00-00040326-0014: $qRcmd,7265736574#37
03-00000000-00-00040326-0020: Received monitor command: reset

01-0000000C-00-00040542-0028: $526573657474696e67207461726765740D0A#b9
03-00000000-00-00040542-0011: Resetting target

03-00000000-00-00164856-0038: Restoring target state and closing J-Link connection...

03-00000000-00-00164876-0011: Shutting down...

